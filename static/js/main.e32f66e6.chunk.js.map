{"version":3,"sources":["components/Card.js","components/CardList.js","containers/Scroll.js","components/SearchBox.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","id","name","email","className","src","alt","CardList","robots","map","user","i","Scroll","props","style","overflowY","border","height","children","SearchBox","searchfield","searchChange","type","placeholder","onChange","value","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","target","fetch","then","response","json","users","filteredRobots","filter","robot","toLowerCase","includes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"kOAgBeA,EAdF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MAEtB,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAG,+BAA0BJ,EAA1B,iBAA6CK,IAAI,WACzD,gCACI,6BAAKJ,IACL,4BAAIC,WCaLI,EAlBE,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAEhB,OACA,8BAEIA,EAAOC,KAAI,SAACC,EAAMC,GAClB,OAAO,cAAC,EAAD,CAECV,GAAIO,EAAOG,GAAGV,GACdC,KAAMM,EAAOG,GAAGT,KAChBC,MAAOK,EAAOG,GAAGR,OAHZQ,SCDNC,EARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAAEC,UAAW,SAAUC,OAAQ,kBAAmBC,OAAQ,QAAtE,SACKJ,EAAMK,YCWJC,EAdG,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aAC9B,OACI,qBAAKjB,UAAU,MAAf,SACI,uBACIA,UAAU,mCACVkB,KAAK,SACLC,YAAY,gBACZC,SAAUH,EACVI,MAAOL,OCWRM,E,kDAlBX,WAAYb,GAAQ,IAAD,8BACf,cAAMA,IACDc,MAAQ,CACTC,UAAU,GAHC,E,qDAOnB,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAAEJ,UAAU,M,oBAE9B,WACI,OAAIG,KAAKJ,MAAMC,SACJ,0DAEJG,KAAKlB,MAAMK,a,GAfCe,aC6CZC,G,wDAtCX,aAAgB,IAAD,8BACX,gBAaJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAAEZ,YAAcgB,EAAMC,OAAOZ,SAb3C,EAAKE,MAAQ,CACTnB,OAAQ,GACRY,YAAa,IAJN,E,qDAQf,WAAqB,IAAD,OAChBkB,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKV,SAAS,CAAExB,OAAQkC,S,oBAO3C,WACI,MAAgCX,KAAKJ,MAA7BnB,EAAR,EAAQA,OAAQY,EAAhB,EAAgBA,YACVuB,EAAiBnC,EAAOoC,QAAO,SAAAC,GACjC,OAAOA,EAAM3C,KAAK4C,cAAcC,SAAS3B,EAAY0B,kBAGzD,OACI,sBAAK1C,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWiB,aAAcU,KAAKI,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAU3B,OAAQmC,e,GAhCxBV,cCKHe,G,MAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBX,MAAK,YAAkD,IAA/CY,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,QCAdO,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,SAM1BX,M","file":"static/js/main.e32f66e6.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst Card = ({ id, name, email }) => {\r\n\r\n    return (\r\n        <div className='tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5'>\r\n            <img src={`https://robohash.org/${id}?size=200x200`} alt=\"robots\" />\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\n\r\n\r\nconst CardList = ({ robots }) => {\r\n    \r\n    return (\r\n    <div>\r\n        { \r\n        robots.map((user, i) => {  \r\n        return <Card \r\n                key={i} \r\n                id={robots[i].id} \r\n                name={robots[i].name} \r\n                email={robots[i].email}\r\n            /> \r\n        })\r\n        }\r\n    </div>\r\n    ); \r\n}\r\n\r\nexport default CardList;","import React from 'react'\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{ overflowY: 'scroll', border: '1px solid black', height: '70vh'  }}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Scroll;\r\n\r\n","import React from 'react'\r\n\r\nconst SearchBox = ({ searchfield, searchChange }) => {\r\n    return (\r\n        <div className='pa2'>\r\n            <input \r\n                className='pa3 ba b--green bg-lightest-blue'\r\n                type=\"search\" \r\n                placeholder=\"Search Robots\" \r\n                onChange={searchChange}\r\n                value={searchfield}\r\n            />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox;","import React, { Component } from 'react';\r\n\r\nclass ErrorBoundry extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        this.setState({ hasError: true })\r\n    }\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return <h1>Oooops. That is not good</h1>\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry;","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList';\r\nimport Scroll from './Scroll';\r\nimport SearchBox from '../components/SearchBox';\r\nimport ErrorBoundry from '../components/ErrorBoundry';\r\nimport './App.css';\r\n\r\nclass App extends Component {\r\n\r\n    constructor () {\r\n        super()\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: '' \r\n        }\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch('https://jsonplaceholder.typicode.com/users')\r\n        .then(response => response.json())\r\n        .then(users => this.setState({ robots: users }));\r\n    }\r\n\r\n    onSearchChange = (event) => { \r\n        this.setState({ searchfield : event.target.value })     \r\n    }\r\n\r\n    render() {\r\n        const { robots, searchfield } = this.state;\r\n        const filteredRobots = robots.filter(robot => {\r\n            return robot.name.toLowerCase().includes(searchfield.toLowerCase());\r\n        });\r\n\r\n        return (\r\n            <div className='tc'>\r\n                <h1 className='f1'>RoboFriends</h1>\r\n                <SearchBox searchChange={this.onSearchChange} />\r\n                <Scroll >\r\n                    <ErrorBoundry>\r\n                        <CardList robots={filteredRobots} />\r\n                    </ErrorBoundry>\r\n                </Scroll>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './containers/App';\nimport 'tachyons'; \nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}